---
// Import Clerk components - using client directives
import { SignedOut, SignedIn, SignUpButton } from "@clerk/clerk-react";
---

<div id="imageContainer" class="w-full flex justify-center mt-2 sm:mt-4 md:mt-6 px-4 sm:px-6 md:px-8 overflow-hidden">
  <img 
    class="w-full sm:w-[90%] md:w-[85%] lg:w-[75%] xl:w-[70%] h-auto object-contain" 
    loading="lazy" 
    src="https://res.cloudinary.com/quantumcona/image/upload/v1745908946/Frame_1000007795_bu7atp.svg"
    alt="Feature illustration" 
  />
</div>

<section
  id="features"
  class="flex z-0 flex-col items-center py-10 sm:py-16 md:py-20 w-full"
>
  <div class="flex flex-wrap gap-5 sm:gap-10 justify-between items-end max-w-full w-full px-4 sm:w-[90%] lg:w-[1180px]">
    <header 
      id="featureHeader"
      class="flex flex-col justify-center font-semibold w-full sm:w-auto min-w-[240px]"
    >
      <div class="flex gap-2.5 items-center self-start px-5 py-2.5 text-sm text-center whitespace-nowrap rounded-[94px] bg-[#fddefdc5]">
        <img
          loading="lazy"
          src="https://cdn.builder.io/api/v1/image/assets/TEMP/80e51a210104da68699c0a721854cd36304d2d3311fb0809531146fd4db371d7?placeholderIfAbsent=true&apiKey=838345b5408f41af9319f4f5af9e5e4c"
          alt=""
          class="object-contain shrink-0 self-stretch my-auto w-6 aspect-square"
        />
        <h3 class="self-stretch my-auto font-medium bg-clip-text text-transparent bg-[linear-gradient(99deg,#C230AD_1%,#6555D0_51.23%)]">
          Features
        </h3>
      </div>
      <h2 class="mt-5 text-xl sm:text-2xl md:text-3xl text-gray-800 bg-clip-text bg-[linear-gradient(99deg,#D33DBC_1%,#7A6AE4_51.23%)]">
        The Best <span class="font-bold text-[#af84ff]">Features</span> That
        <br class="hidden sm:block" />
        Paymorz Provides To You
      </h2>
    </header>
    <p 
      id="featureDescription"
      class="flex-1 shrink text-sm leading-6 basis-0 max-w-full sm:max-w-[470px] text-zinc-400"
    >
      Paymorz offers fast, secure payments with the lowest fees. From
      personal expenses to professional services, our app simplifies your
      financial transactions. Enjoy full control over your payments with
      Paymorz's user-friendly features.
    </p>
  </div>

  <div 
    id="featuresBoxesContainer"
    class="flex flex-wrap gap-5 justify-center items-start self-stretch mt-8 sm:mt-12 md:mt-16 w-full px-4 relative"
  >
    <article 
      id="leftFeatureBox"
      class="flex flex-col flex-1 shrink basis-0 min-h-[350px] sm:min-h-[450px] md:min-h-[484px] min-w-[280px] sm:min-w-[240px] w-full sm:w-auto"
    >
      <img
        loading="lazy"
        src="https://cdn.builder.io/api/v1/image/assets/TEMP/d480a187de0665f4c157aaf33fe877cc948a5ee6a2abb45a6d3b021705146e0c?placeholderIfAbsent=true&apiKey=838345b5408f41af9319f4f5af9e5e4c"
        alt="Invoice management interface"
        class="object-contain w-full aspect-[1.66] min-h-[200px] sm:min-h-[300px] md:min-h-[354px]"
      />
      <div class="flex flex-col justify-center px-5 mt-3.5 w-full">
        <h3 class="text-lg font-medium leading-tight text-gray-800">
          Sent And Received Invoices
        </h3>
        <p class="mt-3.5 text-xs leading-5 text-zinc-400">
          Easily send and receive invoices through Paymorz. Track your
          financial transactions and download invoices for easy
          record-keeping. Whether for personal or business use, managing
          payments is simple with Paymorz.
        </p>
      </div>
    </article>

    <article 
      id="centerFeatureBox"
      class="flex flex-col flex-1 shrink basis-0 min-w-[280px] sm:min-w-[240px] w-full sm:w-auto"
    >
      <img
        loading="lazy"
        src="https://cdn.builder.io/api/v1/image/assets/TEMP/f4f6a1050a4b654165ff3a82f80c371ca6efa5b1e06809b2acc575ccb88d7407?placeholderIfAbsent=true&apiKey=838345b5408f41af9319f4f5af9e5e4c"
        alt="Quick payment feature demonstration"
        class="object-contain w-full aspect-[1.66] min-h-[200px] sm:min-h-[300px] md:min-h-[354px]"
      />
      <div class="flex flex-col justify-center px-5 mt-3.5 w-full">
        <h3 class="text-lg font-medium leading-tight text-gray-800">
          Make Quick Payments
        </h3>
        <p class="mt-3.5 text-xs leading-5 text-zinc-400">
          Make payments in seconds with Paymorz. Whether you're paying bills
          or settling services, our platform ensures fast, reliable
          transactions every time. Schedule payments for added convenience.
        </p>
      </div>
    </article>

    <article 
      id="rightFeatureBox"
      class="flex flex-col flex-1 shrink basis-0 min-w-[280px] sm:min-w-[240px] w-full sm:w-auto"
    >
      <img
        loading="lazy"
        src="https://cdn.builder.io/api/v1/image/assets/TEMP/32752daee8b72519443f9b4d7fe88d9a4f950e15c4a273d3f0adcd3e21c8b3cc?placeholderIfAbsent=true&apiKey=838345b5408f41af9319f4f5af9e5e4c"
        alt="Activity tracking dashboard"
        class="object-contain w-full aspect-[1.66] min-h-[200px] sm:min-h-[300px] md:min-h-[354px]"
      />
      <div class="flex flex-col justify-center px-5 mt-3.5 w-full">
        <h3 class="text-lg font-medium leading-tight text-gray-800">
          Track Your Activity
        </h3>
        <p class="mt-3.5 text-xs leading-5 text-zinc-400">
          Keep an eye on your transactions with Paymorz's activity tracker.
          View your past payments and stay organized with filters for quick
          access. Managing your finances has never been easier.
        </p>
      </div>
    </article>
  </div>

  <div class="flex flex-col items-center mt-8 sm:mt-12 md:mt-16 max-w-full w-[90%] sm:w-[400px]">
    <p class="text-base sm:text-lg leading-6 text-center text-gray-800 bg-clip-text bg-[linear-gradient(99deg,#D33DBC_1%,#7A6AE4_51.23%)]">
      Get the <span class="font-bold">best services</span> by becoming
      <br class="hidden sm:block" />
      our user
    </p>

    <SignedOut client:load>
      <SignUpButton client:load>
        <button
          class="flex overflow-hidden gap-2 justify-center items-center py-4 sm:py-5 px-6 sm:px-8 mt-5 text-sm font-semibold shadow-xl bg-[linear-gradient(108deg,#FFF_-0.37%,#F4F4F6_98.96%)] rounded-[100px] w-full sm:w-auto"
          tabindex="0"
        >
          <span class="self-stretch my-auto bg-clip-text bg-[linear-gradient(99deg,#D33DBC_1%,#7A6AE4_51.23%)]">
            Sign Up Now
          </span>
          <img
            loading="lazy"
            src="https://cdn.builder.io/api/v1/image/assets/TEMP/7727e9a1c80fc4ccd4f197f97db866569ce8423b14bcdb661653fccd95338894?placeholderIfAbsent=true&apiKey=838345b5408f41af9319f4f5af9e5e4c"
            alt=""
            class="object-contain shrink-0 self-stretch my-auto aspect-square w-[18px]"
          />
        </button>
      </SignUpButton>
    </SignedOut>

    <SignedIn client:load>
      <button
        id="dashboardButton"
        class="flex overflow-hidden gap-2 justify-center items-center py-4 sm:py-5 px-6 sm:px-8 mt-5 text-sm font-semibold shadow-xl bg-[linear-gradient(108deg,#FFF_-0.37%,#F4F4F6_98.96%)] rounded-[100px] w-full sm:w-auto"
        tabindex="0"
      >
        <span class="self-stretch my-auto bg-clip-text bg-[linear-gradient(99deg,#D33DBC_1%,#7A6AE4_51.23%)]">
          Go to Dashboard
        </span>
        <img
          loading="lazy"
          src="https://cdn.builder.io/api/v1/image/assets/TEMP/7727e9a1c80fc4ccd4f197f97db866569ce8423b14bcdb661653fccd95338894?placeholderIfAbsent=true&apiKey=838345b5408f41af9319f4f5af9e5e4c"
          alt=""
          class="object-contain shrink-0 self-stretch my-auto aspect-square w-[18px]"
        />
      </button>
    </SignedIn>
  </div>
</section>

<script>
  // Import Framer Motion from CDN - we'll use vanilla animations instead
  import { animate, inView } from 'https://cdn.skypack.dev/motion';

  // Dashboard button functionality
  document.getElementById('dashboardButton')?.addEventListener('click', () => {
    window.location.href = "/dashboard";
  });

  // Set up scroll detection
  let lastScrollY = 0;
  let scrollDirection = "down";

  function updateScrollDirection() {
    const currentScrollY = window.scrollY;
    
    if (currentScrollY > lastScrollY) {
      scrollDirection = "down";
    } else {
      scrollDirection = "up";
    }
    
    lastScrollY = currentScrollY;
  }

  window.addEventListener('scroll', updateScrollDirection, { passive: true });

  // Animation variants similar to the React component
  const imageVariants = {
    hidden: { y: 120, opacity: 0 },
    visible: { 
      y: 0, 
      opacity: 1,
      transition: { duration: 1.5, ease: [0.16, 1, 0.3, 1] }
    }
  };
  
  const headerVariants = {
    hidden: { y: 52, opacity: 0 },
    visible: { 
      y: 0, 
      opacity: 1,
      transition: { duration: 1.0, ease: [0.16, 1, 0.3, 1] }
    }
  };
  
  const descriptionVariants = {
    hidden: { y: 52, opacity: 0 },
    visible: { 
      y: 0, 
      opacity: 1,
      transition: { duration: 1.0, ease: [0.16, 1, 0.3, 1] }
    }
  };
  
  const centerBoxVariants = {
    hidden: { y: 52, opacity: 0 },
    visible: { 
      y: 0, 
      opacity: 1,
      transition: { duration: 1.2, ease: [0.16, 1, 0.3, 1] }
    }
  };
  
  const leftBoxVariants = {
    hidden: { x: "50%", opacity: 0, scale: 0.8 },
    visible: { 
      x: 0, 
      opacity: 1,
      scale: 1,
      transition: { duration: 1.5, ease: [0.16, 1, 0.3, 1], delay: 0.8 }
    }
  };
  
  const rightBoxVariants = {
    hidden: { x: "-50%", opacity: 0, scale: 0.8 },
    visible: { 
      x: 0, 
      opacity: 1,
      scale: 1,
      transition: { duration: 1.5, ease: [0.16, 1, 0.3, 1], delay: 0.8 }
    }
  };

  // Set initial states
  const imageContainer = document.getElementById('imageContainer');
  const headerElement = document.getElementById('featureHeader');
  const descriptionElement = document.getElementById('featureDescription');
  const centerFeatureBox = document.getElementById('centerFeatureBox');
  const leftFeatureBox = document.getElementById('leftFeatureBox');
  const rightFeatureBox = document.getElementById('rightFeatureBox');
  const featuresBoxesContainer = document.getElementById('featuresBoxesContainer');

  // Apply initial hidden state
  if (imageContainer) {
    Object.assign(imageContainer.style, {
      transform: `translateY(${imageVariants.hidden.y}px)`,
      opacity: imageVariants.hidden.opacity
    });
  }

  if (headerElement) {
    Object.assign(headerElement.style, {
      transform: `translateY(${headerVariants.hidden.y}px)`,
      opacity: headerVariants.hidden.opacity
    });
  }

  if (descriptionElement) {
    Object.assign(descriptionElement.style, {
      transform: `translateY(${descriptionVariants.hidden.y}px)`,
      opacity: descriptionVariants.hidden.opacity
    });
  }

  if (centerFeatureBox) {
    Object.assign(centerFeatureBox.style, {
      transform: `translateY(${centerBoxVariants.hidden.y}px)`,
      opacity: centerBoxVariants.hidden.opacity
    });
  }

  if (leftFeatureBox) {
    Object.assign(leftFeatureBox.style, {
      transform: `translateX(${leftBoxVariants.hidden.x}) scale(${leftBoxVariants.hidden.scale})`,
      opacity: leftBoxVariants.hidden.opacity
    });
  }

  if (rightFeatureBox) {
    Object.assign(rightFeatureBox.style, {
      transform: `translateX(${rightBoxVariants.hidden.x}) scale(${rightBoxVariants.hidden.scale})`,
      opacity: rightBoxVariants.hidden.opacity
    });
  }

  // Set up intersection observers
  inView('#imageContainer', ({ target }) => {
    animate(
      target, 
      imageVariants.visible, 
      imageVariants.visible.transition
    );
  });

  inView('#featureHeader', ({ target }) => {
    animate(
      target, 
      headerVariants.visible, 
      headerVariants.visible.transition
    );
    
    // Delayed animation for description
    setTimeout(() => {
      if (descriptionElement) {
        animate(
          descriptionElement, 
          descriptionVariants.visible, 
          descriptionVariants.visible.transition
        );
      }
    }, 400);
  });

  inView('#featuresBoxesContainer', ({ target }) => {
    // Animate center box first
    setTimeout(() => {
      if (centerFeatureBox) {
        animate(
          centerFeatureBox, 
          centerBoxVariants.visible, 
          centerBoxVariants.visible.transition
        );
      }
      
      // Then animate side boxes
      setTimeout(() => {
        if (leftFeatureBox) {
          animate(
            leftFeatureBox, 
            leftBoxVariants.visible, 
            leftBoxVariants.visible.transition
          );
        }
        
        if (rightFeatureBox) {
          animate(
            rightFeatureBox, 
            rightBoxVariants.visible, 
            rightBoxVariants.visible.transition
          );
        }
      }, 500);
    }, 300);
  });
</script>